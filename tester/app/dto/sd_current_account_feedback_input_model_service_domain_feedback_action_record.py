# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tester.app.dto.base_model_ import Model
from tester import util




class SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_domain_servicing_session_reference=None, control_record_instance_reference=None, behavior_qualifier_instance_reference=None, feedback_record_type=None, feedback_record=None):  # noqa: E501
        """SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord - a model defined in OpenAPI

        :param service_domain_servicing_session_reference: The service_domain_servicing_session_reference of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.  # noqa: E501
        :type service_domain_servicing_session_reference: str
        :param control_record_instance_reference: The control_record_instance_reference of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.  # noqa: E501
        :type control_record_instance_reference: str
        :param behavior_qualifier_instance_reference: The behavior_qualifier_instance_reference of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.  # noqa: E501
        :type behavior_qualifier_instance_reference: str
        :param feedback_record_type: The feedback_record_type of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.  # noqa: E501
        :type feedback_record_type: str
        :param feedback_record: The feedback_record of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.  # noqa: E501
        :type feedback_record: object
        """
        self.openapi_types = {
            'service_domain_servicing_session_reference': str,
            'control_record_instance_reference': str,
            'behavior_qualifier_instance_reference': str,
            'feedback_record_type': str,
            'feedback_record': object
        }

        self.attribute_map = {
            'service_domain_servicing_session_reference': 'serviceDomainServicingSessionReference',
            'control_record_instance_reference': 'controlRecordInstanceReference',
            'behavior_qualifier_instance_reference': 'behaviorQualifierInstanceReference',
            'feedback_record_type': 'feedbackRecordType',
            'feedback_record': 'feedbackRecord'
        }

        self._service_domain_servicing_session_reference = service_domain_servicing_session_reference
        self._control_record_instance_reference = control_record_instance_reference
        self._behavior_qualifier_instance_reference = behavior_qualifier_instance_reference
        self._feedback_record_type = feedback_record_type
        self._feedback_record = feedback_record

    @classmethod
    def from_dict(cls, dikt) -> 'SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SDCurrentAccountFeedbackInputModel_serviceDomainFeedbackActionRecord of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.  # noqa: E501
        :rtype: SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_domain_servicing_session_reference(self):
        """Gets the service_domain_servicing_session_reference of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to the active servicing session   # noqa: E501

        :return: The service_domain_servicing_session_reference of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.
        :rtype: str
        """
        return self._service_domain_servicing_session_reference

    @service_domain_servicing_session_reference.setter
    def service_domain_servicing_session_reference(self, service_domain_servicing_session_reference):
        """Sets the service_domain_servicing_session_reference of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to the active servicing session   # noqa: E501

        :param service_domain_servicing_session_reference: The service_domain_servicing_session_reference of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.
        :type service_domain_servicing_session_reference: str
        """

        self._service_domain_servicing_session_reference = service_domain_servicing_session_reference

    @property
    def control_record_instance_reference(self):
        """Gets the control_record_instance_reference of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to the control record instance if appropriate   # noqa: E501

        :return: The control_record_instance_reference of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.
        :rtype: str
        """
        return self._control_record_instance_reference

    @control_record_instance_reference.setter
    def control_record_instance_reference(self, control_record_instance_reference):
        """Sets the control_record_instance_reference of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to the control record instance if appropriate   # noqa: E501

        :param control_record_instance_reference: The control_record_instance_reference of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.
        :type control_record_instance_reference: str
        """

        self._control_record_instance_reference = control_record_instance_reference

    @property
    def behavior_qualifier_instance_reference(self):
        """Gets the behavior_qualifier_instance_reference of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to the behavior qualifier instance if appropriate   # noqa: E501

        :return: The behavior_qualifier_instance_reference of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.
        :rtype: str
        """
        return self._behavior_qualifier_instance_reference

    @behavior_qualifier_instance_reference.setter
    def behavior_qualifier_instance_reference(self, behavior_qualifier_instance_reference):
        """Sets the behavior_qualifier_instance_reference of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to the behavior qualifier instance if appropriate   # noqa: E501

        :param behavior_qualifier_instance_reference: The behavior_qualifier_instance_reference of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.
        :type behavior_qualifier_instance_reference: str
        """

        self._behavior_qualifier_instance_reference = behavior_qualifier_instance_reference

    @property
    def feedback_record_type(self):
        """Gets the feedback_record_type of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The layout/type of the feedback provided   # noqa: E501

        :return: The feedback_record_type of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.
        :rtype: str
        """
        return self._feedback_record_type

    @feedback_record_type.setter
    def feedback_record_type(self, feedback_record_type):
        """Sets the feedback_record_type of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The layout/type of the feedback provided   # noqa: E501

        :param feedback_record_type: The feedback_record_type of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.
        :type feedback_record_type: str
        """

        self._feedback_record_type = feedback_record_type

    @property
    def feedback_record(self):
        """Gets the feedback_record of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The content of the feedback in any suitable format and media   # noqa: E501

        :return: The feedback_record of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.
        :rtype: object
        """
        return self._feedback_record

    @feedback_record.setter
    def feedback_record(self, feedback_record):
        """Sets the feedback_record of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The content of the feedback in any suitable format and media   # noqa: E501

        :param feedback_record: The feedback_record of this SDCurrentAccountFeedbackInputModelServiceDomainFeedbackActionRecord.
        :type feedback_record: object
        """

        self._feedback_record = feedback_record

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tester.app.dto.base_model_ import Model
from tester import util




class InlineResponse2001ServiceDomainFeedbackActionRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, feedback_record_date_time=None, feedback_record_status=None, employee_business_unit_reference=None):  # noqa: E501
        """InlineResponse2001ServiceDomainFeedbackActionRecord - a model defined in OpenAPI

        :param feedback_record_date_time: The feedback_record_date_time of this InlineResponse2001ServiceDomainFeedbackActionRecord.  # noqa: E501
        :type feedback_record_date_time: str
        :param feedback_record_status: The feedback_record_status of this InlineResponse2001ServiceDomainFeedbackActionRecord.  # noqa: E501
        :type feedback_record_status: str
        :param employee_business_unit_reference: The employee_business_unit_reference of this InlineResponse2001ServiceDomainFeedbackActionRecord.  # noqa: E501
        :type employee_business_unit_reference: str
        """
        self.openapi_types = {
            'feedback_record_date_time': str,
            'feedback_record_status': str,
            'employee_business_unit_reference': str
        }

        self.attribute_map = {
            'feedback_record_date_time': 'feedbackRecordDateTime',
            'feedback_record_status': 'feedbackRecordStatus',
            'employee_business_unit_reference': 'employeeBusinessUnitReference'
        }

        self._feedback_record_date_time = feedback_record_date_time
        self._feedback_record_status = feedback_record_status
        self._employee_business_unit_reference = employee_business_unit_reference

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse2001ServiceDomainFeedbackActionRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_1_serviceDomainFeedbackActionRecord of this InlineResponse2001ServiceDomainFeedbackActionRecord.  # noqa: E501
        :rtype: InlineResponse2001ServiceDomainFeedbackActionRecord
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feedback_record_date_time(self):
        """Gets the feedback_record_date_time of this InlineResponse2001ServiceDomainFeedbackActionRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::DateTime  general-info: The date/time the feedback submitted for consideration   # noqa: E501

        :return: The feedback_record_date_time of this InlineResponse2001ServiceDomainFeedbackActionRecord.
        :rtype: str
        """
        return self._feedback_record_date_time

    @feedback_record_date_time.setter
    def feedback_record_date_time(self, feedback_record_date_time):
        """Sets the feedback_record_date_time of this InlineResponse2001ServiceDomainFeedbackActionRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::DateTime  general-info: The date/time the feedback submitted for consideration   # noqa: E501

        :param feedback_record_date_time: The feedback_record_date_time of this InlineResponse2001ServiceDomainFeedbackActionRecord.
        :type feedback_record_date_time: str
        """

        self._feedback_record_date_time = feedback_record_date_time

    @property
    def feedback_record_status(self):
        """Gets the feedback_record_status of this InlineResponse2001ServiceDomainFeedbackActionRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The status of processing the feedback e.g. received, considered, responded to   # noqa: E501

        :return: The feedback_record_status of this InlineResponse2001ServiceDomainFeedbackActionRecord.
        :rtype: str
        """
        return self._feedback_record_status

    @feedback_record_status.setter
    def feedback_record_status(self, feedback_record_status):
        """Sets the feedback_record_status of this InlineResponse2001ServiceDomainFeedbackActionRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The status of processing the feedback e.g. received, considered, responded to   # noqa: E501

        :param feedback_record_status: The feedback_record_status of this InlineResponse2001ServiceDomainFeedbackActionRecord.
        :type feedback_record_status: str
        """

        self._feedback_record_status = feedback_record_status

    @property
    def employee_business_unit_reference(self):
        """Gets the employee_business_unit_reference of this InlineResponse2001ServiceDomainFeedbackActionRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to business unit/employee responsible for handling feedback   # noqa: E501

        :return: The employee_business_unit_reference of this InlineResponse2001ServiceDomainFeedbackActionRecord.
        :rtype: str
        """
        return self._employee_business_unit_reference

    @employee_business_unit_reference.setter
    def employee_business_unit_reference(self, employee_business_unit_reference):
        """Sets the employee_business_unit_reference of this InlineResponse2001ServiceDomainFeedbackActionRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to business unit/employee responsible for handling feedback   # noqa: E501

        :param employee_business_unit_reference: The employee_business_unit_reference of this InlineResponse2001ServiceDomainFeedbackActionRecord.
        :type employee_business_unit_reference: str
        """

        self._employee_business_unit_reference = employee_business_unit_reference

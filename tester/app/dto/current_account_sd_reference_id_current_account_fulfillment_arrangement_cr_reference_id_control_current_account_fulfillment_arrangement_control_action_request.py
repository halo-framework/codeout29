# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tester.app.dto.base_model_ import Model
from tester import util




class CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdControlCurrentAccountFulfillmentArrangementControlActionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, control_action_type=None):  # noqa: E501
        """CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdControlCurrentAccountFulfillmentArrangementControlActionRequest - a model defined in OpenAPI

        :param control_action_type: The control_action_type of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdControlCurrentAccountFulfillmentArrangementControlActionRequest.  # noqa: E501
        :type control_action_type: str
        """
        self.openapi_types = {
            'control_action_type': str
        }

        self.attribute_map = {
            'control_action_type': 'controlActionType'
        }

        self._control_action_type = control_action_type

    @classmethod
    def from_dict(cls, dikt) -> 'CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdControlCurrentAccountFulfillmentArrangementControlActionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _current_account__sd_reference_id__current_account_fulfillment_arrangement__cr_reference_id__control_currentAccountFulfillmentArrangementControlActionRequest of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdControlCurrentAccountFulfillmentArrangementControlActionRequest.  # noqa: E501
        :rtype: CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdControlCurrentAccountFulfillmentArrangementControlActionRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def control_action_type(self):
        """Gets the control_action_type of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdControlCurrentAccountFulfillmentArrangementControlActionRequest.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The type of processing action requested (e.g. suspend, skip, terminate)   # noqa: E501

        :return: The control_action_type of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdControlCurrentAccountFulfillmentArrangementControlActionRequest.
        :rtype: str
        """
        return self._control_action_type

    @control_action_type.setter
    def control_action_type(self, control_action_type):
        """Sets the control_action_type of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdControlCurrentAccountFulfillmentArrangementControlActionRequest.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The type of processing action requested (e.g. suspend, skip, terminate)   # noqa: E501

        :param control_action_type: The control_action_type of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdControlCurrentAccountFulfillmentArrangementControlActionRequest.
        :type control_action_type: str
        """

        self._control_action_type = control_action_type

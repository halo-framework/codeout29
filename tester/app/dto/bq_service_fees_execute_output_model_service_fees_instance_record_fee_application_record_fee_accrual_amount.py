# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tester.app.dto.base_model_ import Model
from tester import util




class BQServiceFeesExecuteOutputModelServiceFeesInstanceRecordFeeApplicationRecordFeeAccrualAmount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accrual_fee_type=None, accrual_fee_charge=None):  # noqa: E501
        """BQServiceFeesExecuteOutputModelServiceFeesInstanceRecordFeeApplicationRecordFeeAccrualAmount - a model defined in OpenAPI

        :param accrual_fee_type: The accrual_fee_type of this BQServiceFeesExecuteOutputModelServiceFeesInstanceRecordFeeApplicationRecordFeeAccrualAmount.  # noqa: E501
        :type accrual_fee_type: str
        :param accrual_fee_charge: The accrual_fee_charge of this BQServiceFeesExecuteOutputModelServiceFeesInstanceRecordFeeApplicationRecordFeeAccrualAmount.  # noqa: E501
        :type accrual_fee_charge: str
        """
        self.openapi_types = {
            'accrual_fee_type': str,
            'accrual_fee_charge': str
        }

        self.attribute_map = {
            'accrual_fee_type': 'accrualFeeType',
            'accrual_fee_charge': 'accrualFeeCharge'
        }

        self._accrual_fee_type = accrual_fee_type
        self._accrual_fee_charge = accrual_fee_charge

    @classmethod
    def from_dict(cls, dikt) -> 'BQServiceFeesExecuteOutputModelServiceFeesInstanceRecordFeeApplicationRecordFeeAccrualAmount':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BQServiceFeesExecuteOutputModel_serviceFeesInstanceRecord_feeApplicationRecord_feeAccrualAmount of this BQServiceFeesExecuteOutputModelServiceFeesInstanceRecordFeeApplicationRecordFeeAccrualAmount.  # noqa: E501
        :rtype: BQServiceFeesExecuteOutputModelServiceFeesInstanceRecordFeeApplicationRecordFeeAccrualAmount
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accrual_fee_type(self):
        """Gets the accrual_fee_type of this BQServiceFeesExecuteOutputModelServiceFeesInstanceRecordFeeApplicationRecordFeeAccrualAmount.

        `status: Registered`  iso-link: https://www.iso20022.org/standardsrepository/public/wqt/Description/mx/dico/bc/_Fbg_gMTGEeChad0JzLk7QA_-330542668/elements/_Fbg_gcTGEeChad0JzLk7QA_-70110816  bian-reference: FeeTransaction.AccuredFeeType  general-info: The fee or penalty type being tracked   # noqa: E501

        :return: The accrual_fee_type of this BQServiceFeesExecuteOutputModelServiceFeesInstanceRecordFeeApplicationRecordFeeAccrualAmount.
        :rtype: str
        """
        return self._accrual_fee_type

    @accrual_fee_type.setter
    def accrual_fee_type(self, accrual_fee_type):
        """Sets the accrual_fee_type of this BQServiceFeesExecuteOutputModelServiceFeesInstanceRecordFeeApplicationRecordFeeAccrualAmount.

        `status: Registered`  iso-link: https://www.iso20022.org/standardsrepository/public/wqt/Description/mx/dico/bc/_Fbg_gMTGEeChad0JzLk7QA_-330542668/elements/_Fbg_gcTGEeChad0JzLk7QA_-70110816  bian-reference: FeeTransaction.AccuredFeeType  general-info: The fee or penalty type being tracked   # noqa: E501

        :param accrual_fee_type: The accrual_fee_type of this BQServiceFeesExecuteOutputModelServiceFeesInstanceRecordFeeApplicationRecordFeeAccrualAmount.
        :type accrual_fee_type: str
        """

        self._accrual_fee_type = accrual_fee_type

    @property
    def accrual_fee_charge(self):
        """Gets the accrual_fee_charge of this BQServiceFeesExecuteOutputModelServiceFeesInstanceRecordFeeApplicationRecordFeeAccrualAmount.

        `status: Registered`  iso-link: https://www.iso20022.org/standardsrepository/public/wqt/Description/mx/dico/bc/_Fbg_gMTGEeChad0JzLk7QA_-330542668/elements/_FMBK98TGEeChad0JzLk7QA_-1487452687  bian-reference: FeeTransaction.AccuredFeeAmount  general-info: The accrued amount of fees and penalties   # noqa: E501

        :return: The accrual_fee_charge of this BQServiceFeesExecuteOutputModelServiceFeesInstanceRecordFeeApplicationRecordFeeAccrualAmount.
        :rtype: str
        """
        return self._accrual_fee_charge

    @accrual_fee_charge.setter
    def accrual_fee_charge(self, accrual_fee_charge):
        """Sets the accrual_fee_charge of this BQServiceFeesExecuteOutputModelServiceFeesInstanceRecordFeeApplicationRecordFeeAccrualAmount.

        `status: Registered`  iso-link: https://www.iso20022.org/standardsrepository/public/wqt/Description/mx/dico/bc/_Fbg_gMTGEeChad0JzLk7QA_-330542668/elements/_FMBK98TGEeChad0JzLk7QA_-1487452687  bian-reference: FeeTransaction.AccuredFeeAmount  general-info: The accrued amount of fees and penalties   # noqa: E501

        :param accrual_fee_charge: The accrual_fee_charge of this BQServiceFeesExecuteOutputModelServiceFeesInstanceRecordFeeApplicationRecordFeeAccrualAmount.
        :type accrual_fee_charge: str
        """

        self._accrual_fee_charge = accrual_fee_charge

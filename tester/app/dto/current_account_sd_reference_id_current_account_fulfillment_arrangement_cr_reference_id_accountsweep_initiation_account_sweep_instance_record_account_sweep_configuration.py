# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tester.app.dto.base_model_ import Model
from tester import util




class CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_account=None, sweep_mandate=None, sweep_processing_schedule=None):  # noqa: E501
        """CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration - a model defined in OpenAPI

        :param target_account: The target_account of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration.  # noqa: E501
        :type target_account: str
        :param sweep_mandate: The sweep_mandate of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration.  # noqa: E501
        :type sweep_mandate: str
        :param sweep_processing_schedule: The sweep_processing_schedule of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration.  # noqa: E501
        :type sweep_processing_schedule: str
        """
        self.openapi_types = {
            'target_account': str,
            'sweep_mandate': str,
            'sweep_processing_schedule': str
        }

        self.attribute_map = {
            'target_account': 'targetAccount',
            'sweep_mandate': 'sweepMandate',
            'sweep_processing_schedule': 'sweepProcessingSchedule'
        }

        self._target_account = target_account
        self._sweep_mandate = sweep_mandate
        self._sweep_processing_schedule = sweep_processing_schedule

    @classmethod
    def from_dict(cls, dikt) -> 'CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _current_account__sd_reference_id__current_account_fulfillment_arrangement__cr_reference_id__accountsweep_initiation_accountSweepInstanceRecord_accountSweepConfiguration of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration.  # noqa: E501
        :rtype: CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_account(self):
        """Gets the target_account of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The facility that the sweep is made to/from   # noqa: E501

        :return: The target_account of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration.
        :rtype: str
        """
        return self._target_account

    @target_account.setter
    def target_account(self, target_account):
        """Sets the target_account of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The facility that the sweep is made to/from   # noqa: E501

        :param target_account: The target_account of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration.
        :type target_account: str
        """

        self._target_account = target_account

    @property
    def sweep_mandate(self):
        """Gets the sweep_mandate of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::DateTime  general-info: Confirmation that the sweep processing is sanctioned as necessary   # noqa: E501

        :return: The sweep_mandate of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration.
        :rtype: str
        """
        return self._sweep_mandate

    @sweep_mandate.setter
    def sweep_mandate(self, sweep_mandate):
        """Sets the sweep_mandate of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::DateTime  general-info: Confirmation that the sweep processing is sanctioned as necessary   # noqa: E501

        :param sweep_mandate: The sweep_mandate of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration.
        :type sweep_mandate: str
        """

        self._sweep_mandate = sweep_mandate

    @property
    def sweep_processing_schedule(self):
        """Gets the sweep_processing_schedule of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Timing and or triggers for initiating sweep transaction   # noqa: E501

        :return: The sweep_processing_schedule of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration.
        :rtype: str
        """
        return self._sweep_processing_schedule

    @sweep_processing_schedule.setter
    def sweep_processing_schedule(self, sweep_processing_schedule):
        """Sets the sweep_processing_schedule of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Timing and or triggers for initiating sweep transaction   # noqa: E501

        :param sweep_processing_schedule: The sweep_processing_schedule of this CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountsweepInitiationAccountSweepInstanceRecordAccountSweepConfiguration.
        :type sweep_processing_schedule: str
        """

        self._sweep_processing_schedule = sweep_processing_schedule

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tester.app.dto.base_model_ import Model
from tester.app.dto.current_account_sd_reference_id_current_account_fulfillment_arrangement_cr_reference_id_accountlien_initiation_account_lien_instance_record_lien_record import CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountlienInitiationAccountLienInstanceRecordLienRecord
from tester import util

from tester.app.dto.current_account_sd_reference_id_current_account_fulfillment_arrangement_cr_reference_id_accountlien_initiation_account_lien_instance_record_lien_record import CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountlienInitiationAccountLienInstanceRecordLienRecord  # noqa: E501



class BQAccountLienInitiateInputModelAccountLienInstanceRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lien_type=None, lien_definition=None, lien_processing_option=None, lien_record=None):  # noqa: E501
        """BQAccountLienInitiateInputModelAccountLienInstanceRecord - a model defined in OpenAPI

        :param lien_type: The lien_type of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.  # noqa: E501
        :type lien_type: str
        :param lien_definition: The lien_definition of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.  # noqa: E501
        :type lien_definition: str
        :param lien_processing_option: The lien_processing_option of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.  # noqa: E501
        :type lien_processing_option: str
        :param lien_record: The lien_record of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.  # noqa: E501
        :type lien_record: CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountlienInitiationAccountLienInstanceRecordLienRecord
        """
        self.openapi_types = {
            'lien_type': str,
            'lien_definition': str,
            'lien_processing_option': str,
            'lien_record': CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountlienInitiationAccountLienInstanceRecordLienRecord
        }

        self.attribute_map = {
            'lien_type': 'lienType',
            'lien_definition': 'lienDefinition',
            'lien_processing_option': 'lienProcessingOption',
            'lien_record': 'lienRecord'
        }

        self._lien_type = lien_type
        self._lien_definition = lien_definition
        self._lien_processing_option = lien_processing_option
        self._lien_record = lien_record

    @classmethod
    def from_dict(cls, dikt) -> 'BQAccountLienInitiateInputModelAccountLienInstanceRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BQAccountLienInitiateInputModel_accountLienInstanceRecord of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.  # noqa: E501
        :rtype: BQAccountLienInitiateInputModelAccountLienInstanceRecord
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lien_type(self):
        """Gets the lien_type of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The type of lien (e.g. final, pending)   # noqa: E501

        :return: The lien_type of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.
        :rtype: str
        """
        return self._lien_type

    @lien_type.setter
    def lien_type(self, lien_type):
        """Sets the lien_type of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The type of lien (e.g. final, pending)   # noqa: E501

        :param lien_type: The lien_type of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.
        :type lien_type: str
        """

        self._lien_type = lien_type

    @property
    def lien_definition(self):
        """Gets the lien_definition of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Definition of the type of lien including processing guidelines   # noqa: E501

        :return: The lien_definition of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.
        :rtype: str
        """
        return self._lien_definition

    @lien_definition.setter
    def lien_definition(self, lien_definition):
        """Sets the lien_definition of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Definition of the type of lien including processing guidelines   # noqa: E501

        :param lien_definition: The lien_definition of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.
        :type lien_definition: str
        """

        self._lien_definition = lien_definition

    @property
    def lien_processing_option(self):
        """Gets the lien_processing_option of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The processing option applied to the lien   # noqa: E501

        :return: The lien_processing_option of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.
        :rtype: str
        """
        return self._lien_processing_option

    @lien_processing_option.setter
    def lien_processing_option(self, lien_processing_option):
        """Sets the lien_processing_option of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The processing option applied to the lien   # noqa: E501

        :param lien_processing_option: The lien_processing_option of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.
        :type lien_processing_option: str
        """

        self._lien_processing_option = lien_processing_option

    @property
    def lien_record(self):
        """Gets the lien_record of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.


        :return: The lien_record of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.
        :rtype: CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountlienInitiationAccountLienInstanceRecordLienRecord
        """
        return self._lien_record

    @lien_record.setter
    def lien_record(self, lien_record):
        """Sets the lien_record of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.


        :param lien_record: The lien_record of this BQAccountLienInitiateInputModelAccountLienInstanceRecord.
        :type lien_record: CurrentAccountSdReferenceIdCurrentAccountFulfillmentArrangementCrReferenceIdAccountlienInitiationAccountLienInstanceRecordLienRecord
        """

        self._lien_record = lien_record

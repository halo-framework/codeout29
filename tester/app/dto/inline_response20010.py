# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tester.app.dto.base_model_ import Model
from tester import util




class InlineResponse20010(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_lien_exchange_action_task_reference=None, account_lien_exchange_action_task_record=None, account_lien_exchange_action_response=None, account_lien_instance_status=None):  # noqa: E501
        """InlineResponse20010 - a model defined in OpenAPI

        :param account_lien_exchange_action_task_reference: The account_lien_exchange_action_task_reference of this InlineResponse20010.  # noqa: E501
        :type account_lien_exchange_action_task_reference: str
        :param account_lien_exchange_action_task_record: The account_lien_exchange_action_task_record of this InlineResponse20010.  # noqa: E501
        :type account_lien_exchange_action_task_record: object
        :param account_lien_exchange_action_response: The account_lien_exchange_action_response of this InlineResponse20010.  # noqa: E501
        :type account_lien_exchange_action_response: str
        :param account_lien_instance_status: The account_lien_instance_status of this InlineResponse20010.  # noqa: E501
        :type account_lien_instance_status: str
        """
        self.openapi_types = {
            'account_lien_exchange_action_task_reference': str,
            'account_lien_exchange_action_task_record': object,
            'account_lien_exchange_action_response': str,
            'account_lien_instance_status': str
        }

        self.attribute_map = {
            'account_lien_exchange_action_task_reference': 'accountLienExchangeActionTaskReference',
            'account_lien_exchange_action_task_record': 'accountLienExchangeActionTaskRecord',
            'account_lien_exchange_action_response': 'accountLienExchangeActionResponse',
            'account_lien_instance_status': 'accountLienInstanceStatus'
        }

        self._account_lien_exchange_action_task_reference = account_lien_exchange_action_task_reference
        self._account_lien_exchange_action_task_record = account_lien_exchange_action_task_record
        self._account_lien_exchange_action_response = account_lien_exchange_action_response
        self._account_lien_instance_status = account_lien_instance_status

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse20010':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_10 of this InlineResponse20010.  # noqa: E501
        :rtype: InlineResponse20010
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_lien_exchange_action_task_reference(self):
        """Gets the account_lien_exchange_action_task_reference of this InlineResponse20010.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to a Account Lien instance exchange service call   # noqa: E501

        :return: The account_lien_exchange_action_task_reference of this InlineResponse20010.
        :rtype: str
        """
        return self._account_lien_exchange_action_task_reference

    @account_lien_exchange_action_task_reference.setter
    def account_lien_exchange_action_task_reference(self, account_lien_exchange_action_task_reference):
        """Sets the account_lien_exchange_action_task_reference of this InlineResponse20010.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::ISO20022andUNCEFACT::Identifier  general-info: Reference to a Account Lien instance exchange service call   # noqa: E501

        :param account_lien_exchange_action_task_reference: The account_lien_exchange_action_task_reference of this InlineResponse20010.
        :type account_lien_exchange_action_task_reference: str
        """

        self._account_lien_exchange_action_task_reference = account_lien_exchange_action_task_reference

    @property
    def account_lien_exchange_action_task_record(self):
        """Gets the account_lien_exchange_action_task_record of this InlineResponse20010.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The exchange service call consolidated processing record   # noqa: E501

        :return: The account_lien_exchange_action_task_record of this InlineResponse20010.
        :rtype: object
        """
        return self._account_lien_exchange_action_task_record

    @account_lien_exchange_action_task_record.setter
    def account_lien_exchange_action_task_record(self, account_lien_exchange_action_task_record):
        """Sets the account_lien_exchange_action_task_record of this InlineResponse20010.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Binary  general-info: The exchange service call consolidated processing record   # noqa: E501

        :param account_lien_exchange_action_task_record: The account_lien_exchange_action_task_record of this InlineResponse20010.
        :type account_lien_exchange_action_task_record: object
        """

        self._account_lien_exchange_action_task_record = account_lien_exchange_action_task_record

    @property
    def account_lien_exchange_action_response(self):
        """Gets the account_lien_exchange_action_response of this InlineResponse20010.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the exchange action service response   # noqa: E501

        :return: The account_lien_exchange_action_response of this InlineResponse20010.
        :rtype: str
        """
        return self._account_lien_exchange_action_response

    @account_lien_exchange_action_response.setter
    def account_lien_exchange_action_response(self, account_lien_exchange_action_response):
        """Sets the account_lien_exchange_action_response of this InlineResponse20010.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Details of the exchange action service response   # noqa: E501

        :param account_lien_exchange_action_response: The account_lien_exchange_action_response of this InlineResponse20010.
        :type account_lien_exchange_action_response: str
        """

        self._account_lien_exchange_action_response = account_lien_exchange_action_response

    @property
    def account_lien_instance_status(self):
        """Gets the account_lien_instance_status of this InlineResponse20010.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The status of the Account Lien instance (e.g. accepted, rejected, verified)   # noqa: E501

        :return: The account_lien_instance_status of this InlineResponse20010.
        :rtype: str
        """
        return self._account_lien_instance_status

    @account_lien_instance_status.setter
    def account_lien_instance_status(self, account_lien_instance_status):
        """Sets the account_lien_instance_status of this InlineResponse20010.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The status of the Account Lien instance (e.g. accepted, rejected, verified)   # noqa: E501

        :param account_lien_instance_status: The account_lien_instance_status of this InlineResponse20010.
        :type account_lien_instance_status: str
        """

        self._account_lien_instance_status = account_lien_instance_status

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tester.app.dto.base_model_ import Model
from tester import util




class SDCurrentAccountConfigureInputModelServiceDomainServiceConfigurationRecordServiceDomainServiceConfigurationSetup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_domain_service_configuration_parameter=None):  # noqa: E501
        """SDCurrentAccountConfigureInputModelServiceDomainServiceConfigurationRecordServiceDomainServiceConfigurationSetup - a model defined in OpenAPI

        :param service_domain_service_configuration_parameter: The service_domain_service_configuration_parameter of this SDCurrentAccountConfigureInputModelServiceDomainServiceConfigurationRecordServiceDomainServiceConfigurationSetup.  # noqa: E501
        :type service_domain_service_configuration_parameter: str
        """
        self.openapi_types = {
            'service_domain_service_configuration_parameter': str
        }

        self.attribute_map = {
            'service_domain_service_configuration_parameter': 'serviceDomainServiceConfigurationParameter'
        }

        self._service_domain_service_configuration_parameter = service_domain_service_configuration_parameter

    @classmethod
    def from_dict(cls, dikt) -> 'SDCurrentAccountConfigureInputModelServiceDomainServiceConfigurationRecordServiceDomainServiceConfigurationSetup':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SDCurrentAccountConfigureInputModel_serviceDomainServiceConfigurationRecord_serviceDomainServiceConfigurationSetup of this SDCurrentAccountConfigureInputModelServiceDomainServiceConfigurationRecordServiceDomainServiceConfigurationSetup.  # noqa: E501
        :rtype: SDCurrentAccountConfigureInputModelServiceDomainServiceConfigurationRecordServiceDomainServiceConfigurationSetup
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_domain_service_configuration_parameter(self):
        """Gets the service_domain_service_configuration_parameter of this SDCurrentAccountConfigureInputModelServiceDomainServiceConfigurationRecordServiceDomainServiceConfigurationSetup.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The requested and current activation values for the service configuration parameter    # noqa: E501

        :return: The service_domain_service_configuration_parameter of this SDCurrentAccountConfigureInputModelServiceDomainServiceConfigurationRecordServiceDomainServiceConfigurationSetup.
        :rtype: str
        """
        return self._service_domain_service_configuration_parameter

    @service_domain_service_configuration_parameter.setter
    def service_domain_service_configuration_parameter(self, service_domain_service_configuration_parameter):
        """Sets the service_domain_service_configuration_parameter of this SDCurrentAccountConfigureInputModelServiceDomainServiceConfigurationRecordServiceDomainServiceConfigurationSetup.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: The requested and current activation values for the service configuration parameter    # noqa: E501

        :param service_domain_service_configuration_parameter: The service_domain_service_configuration_parameter of this SDCurrentAccountConfigureInputModelServiceDomainServiceConfigurationRecordServiceDomainServiceConfigurationSetup.
        :type service_domain_service_configuration_parameter: str
        """

        self._service_domain_service_configuration_parameter = service_domain_service_configuration_parameter

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tester.app.dto.base_model_ import Model
from tester import util




class SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_domain_service_eligibility=None, service_domain_service_intended_uses=None, service_domain_service_pricingand_terms=None):  # noqa: E501
        """SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines - a model defined in OpenAPI

        :param service_domain_service_eligibility: The service_domain_service_eligibility of this SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines.  # noqa: E501
        :type service_domain_service_eligibility: str
        :param service_domain_service_intended_uses: The service_domain_service_intended_uses of this SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines.  # noqa: E501
        :type service_domain_service_intended_uses: str
        :param service_domain_service_pricingand_terms: The service_domain_service_pricingand_terms of this SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines.  # noqa: E501
        :type service_domain_service_pricingand_terms: str
        """
        self.openapi_types = {
            'service_domain_service_eligibility': str,
            'service_domain_service_intended_uses': str,
            'service_domain_service_pricingand_terms': str
        }

        self.attribute_map = {
            'service_domain_service_eligibility': 'serviceDomainServiceEligibility',
            'service_domain_service_intended_uses': 'serviceDomainServiceIntendedUses',
            'service_domain_service_pricingand_terms': 'serviceDomainServicePricingandTerms'
        }

        self._service_domain_service_eligibility = service_domain_service_eligibility
        self._service_domain_service_intended_uses = service_domain_service_intended_uses
        self._service_domain_service_pricingand_terms = service_domain_service_pricingand_terms

    @classmethod
    def from_dict(cls, dikt) -> 'SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SDCurrentAccountRetrieveOutputModel_serviceDomainOfferedService_serviceDomainServiceRecord_serviceDomainServicePoliciesandGuidelines of this SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines.  # noqa: E501
        :rtype: SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_domain_service_eligibility(self):
        """Gets the service_domain_service_eligibility of this SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Policies and rules governing access to the offered service, includes eligibility and qualifications   # noqa: E501

        :return: The service_domain_service_eligibility of this SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines.
        :rtype: str
        """
        return self._service_domain_service_eligibility

    @service_domain_service_eligibility.setter
    def service_domain_service_eligibility(self, service_domain_service_eligibility):
        """Sets the service_domain_service_eligibility of this SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Policies and rules governing access to the offered service, includes eligibility and qualifications   # noqa: E501

        :param service_domain_service_eligibility: The service_domain_service_eligibility of this SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines.
        :type service_domain_service_eligibility: str
        """

        self._service_domain_service_eligibility = service_domain_service_eligibility

    @property
    def service_domain_service_intended_uses(self):
        """Gets the service_domain_service_intended_uses of this SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Guidelines covering allowed, intended use of the service   # noqa: E501

        :return: The service_domain_service_intended_uses of this SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines.
        :rtype: str
        """
        return self._service_domain_service_intended_uses

    @service_domain_service_intended_uses.setter
    def service_domain_service_intended_uses(self, service_domain_service_intended_uses):
        """Sets the service_domain_service_intended_uses of this SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Guidelines covering allowed, intended use of the service   # noqa: E501

        :param service_domain_service_intended_uses: The service_domain_service_intended_uses of this SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines.
        :type service_domain_service_intended_uses: str
        """

        self._service_domain_service_intended_uses = service_domain_service_intended_uses

    @property
    def service_domain_service_pricingand_terms(self):
        """Gets the service_domain_service_pricingand_terms of this SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Terms, prices, penalties associated with use of the service   # noqa: E501

        :return: The service_domain_service_pricingand_terms of this SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines.
        :rtype: str
        """
        return self._service_domain_service_pricingand_terms

    @service_domain_service_pricingand_terms.setter
    def service_domain_service_pricingand_terms(self, service_domain_service_pricingand_terms):
        """Sets the service_domain_service_pricingand_terms of this SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines.

        `status: Not Mapped`  core-data-type-reference: BIAN::DataTypesLibrary::CoreDataTypes::UNCEFACT::Text  general-info: Terms, prices, penalties associated with use of the service   # noqa: E501

        :param service_domain_service_pricingand_terms: The service_domain_service_pricingand_terms of this SDCurrentAccountRetrieveOutputModelServiceDomainOfferedServiceServiceDomainServiceRecordServiceDomainServicePoliciesandGuidelines.
        :type service_domain_service_pricingand_terms: str
        """

        self._service_domain_service_pricingand_terms = service_domain_service_pricingand_terms
